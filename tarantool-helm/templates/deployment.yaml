apiVersion: tarantool.io/v1alpha1
kind: Cluster
metadata:
  name: {{ .Values.ClusterName }}
spec:
  selector:
    matchLabels:
      tarantool.io/cluster-id: {{ .Values.ClusterName }}
---
apiVersion: tarantool.io/v1alpha1
kind: Role
metadata:
  name: {{ .Values.StorageSpec.RoleName }}
  namespace: default
  labels:
    tarantool.io/cluster-id: {{ .Values.ClusterName }}
    tarantool.io/role: {{ .Values.StorageSpec.RoleName }}
spec:
  selector:
    matchLabels:
      tarantool.io/replicaset-template: "{{ .Values.StorageSpec.RoleName }}-template"
  numReplicasets: 1
---
apiVersion: tarantool.io/v1alpha1
kind: Role
metadata:
  name: {{ .Values.RouterSpec.RoleName }}
  namespace: default
  labels:
    tarantool.io/cluster-id: {{ .Values.ClusterName }}
    tarantool.io/role: {{ .Values.RouterSpec.RoleName }}
spec:
  selector:
    matchLabels:
      tarantool.io/replicaset-template: api-template
  numReplicasets: 1
---
apiVersion: tarantool.io/v1alpha1
kind: ReplicasetTemplate
metadata:
  name: "{{ .Values.StorageSpec.RoleName }}-template"
  labels:
    tarantool.io/cluster-id: {{ .Values.ClusterName }}
    tarantool.io/replicaset-template: "{{ .Values.StorageSpec.RoleName }}-template"
    tarantool.io/role: {{ .Values.StorageSpec.RoleName }}
spec:
  replicas: {{ .Values.StorageSpec.ReplicaCount }}
  serviceName: {{ .Values.StorageSpec.RoleName }}
  selector:
    matchLabels:
      tarantool.io/pod-template: "{{ .Values.StorageSpec.RoleName }}-pod-template"
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        tarantool.io/cluster-id: {{ .Values.ClusterName }}
        tarantool.io/pod-template: "{{ .Values.StorageSpec.RoleName }}-pod-template"
    spec:
      terminationGracePeriodSeconds: 10
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: pim-storage
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - mountPath: "/data"
              name: www
          resources:
            cpu: {{ .Values.StorageSpec.CPUallocation }}
            memory: "{{ .Values.StorageSpec.MemtxMemoryMB }}M"
          ports:
            - containerPort: 3301
              protocol: TCP
              name: app
            - containerPort: 3301
              protocol: UDP
              name: app-udp
            - containerPort: 8081
              protocol: TCP
              name: http
          env:
            - name: TARANTOOL_INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TARANTOOL_WORK_DIR
              value: "/opt/tarantool"
            - name: TARANTOOL_MEMTX_MEMORY
              value: "{{ mul .Values.StorageSpec.MemtxMemoryMB 1048576 }}"
            - name: TARANTOOL_BUCKET_COUNT
              value: "30000"
            # - name: TARANTOOL_LOG
            #   value: "/dev/stdout"
            - name: TARANTOOL_ADVERTISE_TMP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TARANTOOL_ADVERTISE_HOST
              value: "$(TARANTOOL_ADVERTISE_TMP).{{ .Values.ClusterName }}.default.svc.cluster.local"
            - name: TARANTOOL_ADVERTISE_URI
              value: "$(TARANTOOL_ADVERTISE_HOST):3301"
            - name: VPC_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_ROLE_TAG
              value: storage
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: tarantool.io/v1alpha1
kind: ReplicasetTemplate
metadata:
  name: api-template
  labels:
    tarantool.io/cluster-id: {{ .Values.ClusterName }}
    tarantool.io/replicaset-template: api-template
    tarantool.io/role: {{ .Values.RouterSpec.RoleName }}
spec:
  replicas: {{ .Values.RouterSpec.ReplicaCount }}
  serviceName: {{ .Values.RouterSpec.RoleName }}
  selector:
    matchLabels:
      tarantool.io/pod-template: api-pod-template
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        tarantool.io/cluster-id: {{ .Values.ClusterName }}
        tarantool.io/pod-template: api-pod-template
    spec:
      terminationGracePeriodSeconds: 10
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: pim-router
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - mountPath: "/data"
              name: www
          ports:
            - containerPort: 3301
              name: app
            - containerPort: 3301
              protocol: UDP
              name: app-udp
            - containerPort: 8081
              name: http
          resources:
            cpu: {{ .Values.RouterSpec.CPUallocation }}
            memory: "{{ .Values.RouterSpec.MemtxMemoryMB }}M"
          env:
            - name: TARANTOOL_INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TARANTOOL_WORK_DIR
              value: "/opt/tarantool"
            - name: TARANTOOL_MEMTX_MEMORY
              value: "{{ mul .Values.RouterSpec.MemtxMemoryMB 1048576 }}"
            # - name: TARANTOOL_LOG
            #   value: "/dev/stdout"
            - name: TARANTOOL_ADVERTISE_TMP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TARANTOOL_ADVERTISE_HOST
              value: "$(TARANTOOL_ADVERTISE_TMP).{{ .Values.ClusterName }}.default.svc.cluster.local"
            - name: TARANTOOL_ADVERTISE_URI
              value: "$(TARANTOOL_ADVERTISE_HOST):3301"
            - name: VPC_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_ROLE_TAG
              value: router
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.RouterSpec.RoleName }}
  labels:
    tarantool.io/role: {{ .Values.RouterSpec.RoleName }}
  annotations:
    consul.hashicorp.com/service-tags: "api,router"
spec:
  ports:
    - port: 8081
      name: web
      protocol: TCP
    - port: 3301
      name: app
      protocol: TCP
  selector:
    tarantool.io/role: {{ .Values.RouterSpec.RoleName }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.StorageSpec.RoleName }}
  labels:
    tarantool.io/role: {{ .Values.StorageSpec.RoleName }}
  annotations:
    consul.hashicorp.com/service-tags: "api,router"
spec:
  ports:
    - port: 8081
      name: web
      protocol: TCP
    - port: 3301
      name: app
      protocol: TCP
  selector:
    tarantool.io/role: {{ .Values.StorageSpec.RoleName }}
